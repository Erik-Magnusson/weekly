@inject IDispatcher dispatcher
<div class="p-2 border-bottom border-top mt-4 bg-light border-dark">
    <h5 class="text-sm-start">New Todo</h5>
    <EditForm class="d-flex align-items-center justify-content-between" Model=@template OnSubmit=@AddNewTemplate>
        <InputText @bind-Value=@template.Text placeholder="Name" class="form-control me-2" id="todo-text" />
        <InputNumber @bind-Value=@template.NrTotal placeholder="@template.NrTotal" class="form-control me-2" id="todo-nr" />
        <InputSelect @bind-Value=@template.Unit class="form-select me-2" id="todo-unit">
            @foreach (Todo.TodoUnit unit in (Todo.TodoUnit[])Enum.GetValues(typeof(Todo.TodoUnit)))
            {
                <option value=@unit>@unit</option>
            }
        </InputSelect>
        <div class="d-flex justify-content-end material-icons">
            <button type="submit" class="btn btn-success me-1">add</button>
        </div>
    </EditForm>

</div>


@code {

    private Template template = new Template()
    {
        Text = string.Empty,
        NrTotal = 1,
        Unit = Todo.TodoUnit.TIMES
    };

    private void AddNewTemplate()
    {
        var newTemplate = template;
        newTemplate.Id = null;
        var dispatchable = new Dispatchable<Template>(ActionType.ADD_TEMPLATE, newTemplate);
        dispatcher.Dispatch(dispatchable);
    }

}
