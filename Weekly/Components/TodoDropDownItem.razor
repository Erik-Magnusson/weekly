
<div class="p-2 border-bottom border-dark">
    @if(isEditing)
    {
        <EditForm class="d-flex align-items-center justify-content-between w-100" Model=@Item OnSubmit=@Edit>
            <InputText @bind-Value=@Item.Text placeholder="@Item.Text" class="form-control me-2" id="todo-text" />
            <InputNumber @bind-Value=@Item.NrTotal placeholder="@Item.NrTotal" class="form-control me-2" id="todo-nr" />
            <InputSelect @bind-Value=@Item.Unit class="form-control me-2" id="todo-unit">
                @foreach (TodoUnit unit in (TodoUnit[]) Enum.GetValues(typeof(TodoUnit)))
                {
                    <option value=@unit>@unit</option>
                }
            </InputSelect>        
            <div class="d-flex">
                <button type="submit" class="btn btn-success me-1"><span class="oi oi-circle-check" /></button>
                <button class="btn btn-danger" @onclick="() => isEditing = false"><span class="oi oi-circle-x" /></button>
            </div>
        </EditForm>
    }   
    else
    {
        <div class="d-flex align-items-center justify-content-between">
            <p class="m-0">@Item.Text</p>
            <p class="m-0">@Item.NrTotal</p>
            <p class="m-0">@Item.Unit</p>
            <div>
                <button class="btn btn-primary" @onclick="() => isEditing = !isEditing"><span class="oi oi-pencil" /></button>
                <button class="btn btn-success"><span class="oi oi-plus" /></button>
                <button class="btn btn-danger"><span class="oi oi-trash" /></button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public required Todo Item { get; set; }

    private bool isEditing;

    private void Edit()
    {
        isEditing = false;
    }

}
