
<div class="p-2 border-bottom border-dark">
    @if(isEditing)
    {
        <EditForm class="d-flex align-items-center justify-content-between w-100" Model=@Item OnSubmit=@Edit>
            <InputText @bind-Value=@Item.Text placeholder="@Item.Text" class="form-control me-2" id="todo-text" />
            <InputNumber @bind-Value=@Item.NrTotal placeholder="@Item.NrTotal" class="form-control me-2" id="todo-nr" />
            <InputSelect @bind-Value=@Item.Unit class="form-control me-2" id="todo-unit">
                @foreach (TodoUnit unit in (TodoUnit[]) Enum.GetValues(typeof(TodoUnit)))
                {
                    <option value=@unit>@unit</option>
                }
            </InputSelect>
            <div class="material-icons me-2 border border-light border-2 rounded p-1"
                @onclick="() => isEditingIcons = !isEditingIcons" 
                style="cursor: default;">
                @Item.Icon
                @if(isEditingIcons)
                {
                    <div class="position-absolute bg-light p-1 border border-dark rounded">
                        @foreach(var icon in Icons)
                        {
                            <div class="bg-white m-1 border rounded p-1" @onclick="() => SetIcon(icon.Name)">@icon.Name</div>
                        }
                    </div>
                }
            </div>
            <div class="d-flex">
                <button type="submit" class="btn btn-success me-1"><span class="oi oi-circle-check" /></button>
                <button class="btn btn-danger" @onclick="() => isEditing = false"><span class="oi oi-circle-x" /></button>
            </div>
        </EditForm>
    }   
    else
    {
        <div class="d-flex align-items-center justify-content-between">
            <p class="m-0">@Item.Text</p>
            <p class="m-0">@Item.NrTotal</p>
            <p class="m-0">@Item.Unit</p>
            <div class="material-icons">@Item.Icon</div>
            <div>
                <button class="btn btn-primary" @onclick="() => isEditing = !isEditing"><span class="oi oi-pencil" /></button>
                <button class="btn btn-success"><span class="oi oi-plus" /></button>
                <button class="btn btn-danger"><span class="oi oi-trash" /></button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public required Todo Item { get; set; }

    [Parameter]
    public required IList<Icon> Icons { get; set; }

    private bool isEditing;
    private bool isEditingIcons;

    private void Edit()
    {
        isEditing = false;
    }

    private void SetIcon(string icon)
    {
        Item.Icon = icon;
    }



}
