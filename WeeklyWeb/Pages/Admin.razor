@page "/admin"
@inject ITemplateStore TemplateStore
@inject ITodoStore TodoStore
@inject IDispatcher Dispatcher
@implements IDisposable
@attribute [Authorize]


<div class="container">
    <div class="px-2 mt-5 col-md-8 offset-md-2 col-lg-6 offset-lg-3">
        @foreach(var todo in TodoStore.Todos)
        {
            <div class="row p-2 m-1 border border-dark rounded">
                <TemplateItem
                    Item="@todo"/>
                <div class="col-3 d-flex justify-content-end">
                    <button class="btn btn-danger material-icons" @onclick="() => DeleteTodo(todo)">delete_outline</button>
                </div>
            </div>
        }
    </div>
    <DropDown Class="px-2 mt-5 col-md-8 offset-md-2 col-lg-6 offset-lg-3" Placeholder="Choose todo">
        <Options>
            @foreach(var template in TemplateStore.Templates)
            {
                <EditTemplateItem
                Item="@template" />
            }
            <NewTemplateItem/>
        </Options>
    </DropDown>
</div>
@code {


    protected override void OnInitialized()
    {
        base.OnInitialized();
        TodoStore.OnChange += StateHasChanged;
        TemplateStore.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        TodoStore.OnChange -= StateHasChanged;
        TemplateStore.OnChange -= StateHasChanged;
    }

    private void DeleteTodo(Todo todo)
    {
        todo.ActionType = ActionType.DELETE_TODO;
        Dispatcher.Dispatch(todo);
    }

}
